name: Build, Deploy, and Sync S3


on:
  push:
   branches:
    - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./infra
        
      - name: Apply Terraform
        id: apply_terraform
        run: terraform apply -auto-approve
        working-directory: ./infra
        
  build:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          
      - name: Install dependencies and build
        run: |
          npm install
          npm run build/

      - name: Copy db.json to build folder
        run: cp db.json build/
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: build/

  upload_to_s3:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: build
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          
      - name: Sync to S3
        run: |
              aws s3 sync client/dist s3://react-recipe-mik --acl public-read --delete

  destroy:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./infra
        
      - name: Destroy Terraform resources
        run: terraform destroy -auto-approve
        working-directory: ./infra
        
